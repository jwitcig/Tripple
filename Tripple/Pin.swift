//
//  Pin.swift
//  MySampleApp
//
//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.2
//

import Foundation
import UIKit

import AWSDynamoDB
import RealmSwift

protocol Pin {
    var userId: String { get set }
    var id: String { get set }
    var message: String? { get set }
    var title: String { get set }
    
    var createdDate: NSDate { get set }
}

protocol LocalPinModel: Pin {
    var _userId: String { get set }
    var _id: String { get set }
    var _message: String? { get set }
    var _title: String { get set }
    var _timestamp: Int { get set }
}

protocol CloudPinModel: Pin {
    var _userId: String? { get set }
    var _id: String? { get set }
    var _message: String? { get set }
    var _title: String? { get set }
    var _timestamp: NSNumber? { get set }
}

extension Pin {
    init() {
        self.init()
    }
    
    init(title: String, message: String? = nil) {
        self.init()
        self.title = title
        self.message = message
    }
}

extension LocalPinModel {
    
    var userId: String {
        get { return _userId ?? "" }
        set { _userId = newValue }
    }
    var id: String {
        get { return _id ?? "" }
        set { _id = newValue }
    }
    var message: String? {
        get { return _message }
        set { _message = newValue }
    }
    var title: String {
        get { return _title ?? "" }
        set { _title = newValue }
    }

    
    var createdDate: NSDate {
        get {
            return NSDate(timeIntervalSince1970: Double(_timestamp))
        }
        set {
            _timestamp = Int(newValue.timeIntervalSince1970)
        }
    }
}

extension CloudPinModel {
    var userId: String {
        get { return _userId ?? "" }
        set { _userId = newValue }
    }
    var id: String {
        get { return _id ?? "" }
        set { _id = newValue }
    }
    var message: String? {
        get { return _message }
        set { _message = newValue }
    }
    var title: String {
        get { return _title ?? "" }
        set { _title = newValue }
    }
    
    var createdDate: NSDate {
        get {
            if let interval = _timestamp {
                return NSDate(timeIntervalSince1970: interval.doubleValue)
            }
            return NSDate()
        }
        set {
            _timestamp = NSNumber(double: newValue.timeIntervalSince1970)
        }
    }
}

class LocalPin: Object, LocalPinModel {
    dynamic var _userId = ""
    dynamic var _id = ""
    dynamic var _message: String?
    dynamic var _title = ""
    dynamic var _timestamp = 0
    
    override static func primaryKey() -> String? {
        return "_id"
    }
    
    override static func ignoredProperties() -> [String] {
        return ["userId", "id", "message", "title", "timestamp"]
    }
}

class CloudPin: AWSDynamoDBObjectModel, AWSDynamoDBModeling, CloudPinModel  {
    var _userId: String?
    var _id: String?
    var _message: String?
    var _title: String?
    var _timestamp: NSNumber?
    
    class func dynamoDBTableName() -> String {

        return "tripple-mobilehub-1169331636-Pin"
    }
    
    class func hashKeyAttribute() -> String {

        return "_userId"
    }
    
    class func rangeKeyAttribute() -> String {

        return "_id"
    }
    
    override class func JSONKeyPathsByPropertyKey() -> [NSObject : AnyObject] {
        return [
               "_userId" : "userId",
               "_id" : "id",
               "_message" : "message",
               "_title" : "title",
               "_timestamp" : "timestamp",
        ]
    }
    
    static func ignoreAttributes() -> [String] {
        return ["createdDate"]
    }
    
    // additions
    
    override init() {
        super.init()
    }
    
    override init(dictionary dictionaryValue: [NSObject : AnyObject]!, error: ()) throws {
        try super.init(dictionary: dictionaryValue, error: error)
    }
    
    required init!(coder: NSCoder!) {
        fatalError("init(coder:) has not been implemented")
    }

}
