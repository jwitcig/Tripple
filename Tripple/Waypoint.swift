//
//  Waypoint.swift
//  MySampleApp
//
//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.2
//

import CoreLocation
import Foundation
import UIKit

import AWSDynamoDB

class Waypoint: AWSDynamoDBObjectModel, AWSDynamoDBModeling {
    
    var _userId: String?
    var _id: String?
    var _location: [String: String]?
    var _pinId: String?
    var _previousWaypointId: String?
    
    class func dynamoDBTableName() -> String {

        return "tripple-mobilehub-1169331636-Waypoint"
    }
    
    class func hashKeyAttribute() -> String {

        return "_userId"
    }
    
    override class func JSONKeyPathsByPropertyKey() -> [NSObject : AnyObject] {
        return [
               "_userId" : "userId",
               "_id" : "id",
               "_location" : "location",
               "_pinId" : "pinId",
               "_previousWaypointId" : "previousWaypointId",
        ]
    }
    
    // additions
    
    var latitude: CLLocationDegrees? {
        guard let latitude = _location?["latitude"] else { return nil }
        
        return (latitude as NSString).doubleValue
    }
    
    var longitude: CLLocationDegrees? {
        guard let longitude = _location?["longitude"] else { return nil }
        
        return (longitude as NSString).doubleValue
    }
    
    var altitude: CLLocationDegrees? {
        guard let altitude = _location?["altitude"] else { return nil }
        return (altitude as NSString).doubleValue
    }
    
    var location: CLLocation? {
        get {
            guard let latitude = latitude, let longitude = longitude else { return nil }
            return CLLocation(latitude: latitude, longitude: longitude)
        }
        set {
            _location = [
                "latitude": "\(newValue?.coordinate.latitude)",
                "longitude": "\(newValue?.coordinate.longitude)",
                "altitude": "\(newValue?.altitude)",
            ]
        }
    }
    
    override init() {
        super.init()
    }
    
    convenience init(pin: Pin, location: CLLocation, previousWaypoint: Waypoint? = nil) {
        self.init()
        
        self._pinId = pin._id
        self.location = location
        self._previousWaypointId = previousWaypoint?._id
    }
    
    required init!(coder: NSCoder!) {
        fatalError("init(coder:) has not been implemented")
    }
    
}
